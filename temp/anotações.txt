Agradecimentos:
- Reconhecimento e agradecimento às pessoas envolvidas no projeto.
- Agradecer ao Chat GPT, PowerTuning, Hashtag


Introdução:
- Propósito da documentação (demonstrar as habilidades teóricas adquiridas).
- Escopo do projeto de DBA (atender um cliente fictício).
- Objetivos do sistema de banco de dados (a empresa é nova e quer um sistema ágil e que seja simples na disponibilização de insights).


Descrição da Pousada:
- Características e instalações da pousada fictícia.
- Tipos de acomodações oferecidas.
- Serviços e comodidades disponíveis.


Análise de Requisitos:
- Levantamento das necessidades da pousada em termos de banco de dados.
- Requisitos funcionais e não funcionais.


Projeto da Database e Arquitetura:
- Modelo conceitual do banco de dados.
- Modelo lógico e físico do banco de dados.
- Esquema do banco de dados e tabelas.


Modelos e Diagramas:
- Diagrama Entidade-Relacionamento (DER) ou Diagrama de Classes.
- Diagramas de relacionamentos entre tabelas.
- Outros diagramas relevantes, como diagrama de fluxo de dados.


Estrutura do Banco e das Tabelas:
- Explicar o COLLATE escolhido.
- Descrição detalhada de cada tabela do banco de dados.
- Atributos, tipos de dados e restrições de cada tabela.
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX


Segurança e Privacidade:
- Medidas de segurança implementadas para proteger os dados dos hóspedes.
- Máscara de Dados Dinâmicos.
- Fazer testes de controle tanto com trigger quanto com procedure (anote os resultados e documente).
- Políticas de privacidade e conformidade com regulamentos.


Testagens:
- Plano de testes para verificar a integridade e a funcionalidade do banco de dados.
- Resultados dos testes realizados.
- Análise dos dados gerados e estruturação de planos de ação para a empresa com base nos insights.


Conclusão:
- Críticas e avaliações gerais do projeto.
- Considerações finais sobre o projeto e seus resultados.
- Lições aprendidas e possíveis melhorias futuras.


Referências:
- Listagem de fontes e referências consultadas durante o projeto.


Apêndices:
- Documentação técnica adicional ou detalhes adicionais sobre o projeto.



XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

- criar associativa Reserva_Bar

- informar se o funcionário ainda está ativo e colocar a data de admissão e demissão

- tirar print e pegar resultados das operações após implementação de melhoria

- transformar os FLOATs financeiros em DECIMAL

- anotar no documento que a pousada tem 30 quartos e 5 andares (6 quartos em cada andar); no térreo está a recepção, bar, office room e academia; falar que cada quarto é numerado de 101 a 130

- transformar num_andar (tabela quarto) em check, aceitando apenas valores de 1 a 5

- transformar valor_diaria (tabela quarto) em check, aceitando um valor mínimo de 80(?)

- Tornar as FK em Uniques e adicionar ON DELETE/MODIFY caso necessário

- Impedir o aluguel do mesmo quarto ao mesmo tempo (trigger)

- A data de checkout não pode ser menor do que a data de checkin (trigger e/ou check)

- verificar o num_hospede(tabela reserva) com a associativa(tabela estadia) (usar uma sp para o cadastro dos hóspedes. Primeiro realizar o cadastro normal, somente com o principal, em seguida fazer o cadastro dos outros...?)

- verificar se o funcionário é autorizado para fazer checkin/checkout(trigger)

- triiger para calcular o valor final antes de inativar uma reserva não cancelada

- Criar a database Finanças (Tabelas: salarios, entradas, saídas)



XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

Criar Índices e Restrições: Avalie quais índices são necessários para melhorar o desempenho das consultas e criar restrições (como chaves únicas) para garantir a integridade dos dados.

Criar Procedimentos Armazenados: Crie procedimentos armazenados para executar operações complexas ou frequentes no banco de dados.

Criar Funções e Triggers: Considere criar funções para processamento de dados e triggers para automatizar ações quando certos eventos ocorrem.

Criar Visões: Se necessário, crie visões para simplificar consultas complexas ou fornecer uma camada de abstração para os usuários.

Realizar Testes e Otimização: Execute testes de desempenho e otimize consultas para garantir que o banco de dados funcione de maneira eficiente.

Documentação Completa: Complete a documentação do seu projeto, incluindo descrições detalhadas das tabelas, relacionamentos, procedimentos, funções, visões, etc.

Implementar Segurança: Defina permissões de usuário para garantir que apenas as pessoas autorizadas tenham acesso e as ações apropriadas no banco de dados.

Backup e Monitoramento: Implemente rotinas regulares de backup do banco de dados e estabeleça processos de monitoramento para garantir a saúde do sistema.










