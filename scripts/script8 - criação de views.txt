CREATE VIEW [scFuncionario].[view_Funcionario]
AS (
SELECT TOP 1
	CONCAT(f.nome, ' ', f.sobrenome) nome,
	DATEDIFF(YEAR, f.dt_nascimento, GETDATE()) idade,
	f.cpf cpf,
	f.rg rg,
	CASE
		WHEN (LOWER(f.sexo) = 'm') THEN 'masculino'
		WHEN (LOWER(f.sexo) = 'f') THEN 'feminino'
		ELSE 'não informado'
	END sexo,
	em.email email,
	CONCAT('(', tl.codigo_area, ') ', tl.telefone) telefone,
	CONCAT(ed.cidade, ', ', ed.bairro) endereco,
	fc.descricao funcao,
	cn.usuario conta,
	f.observacao obs
FROM [scFuncionario].[Funcionario] f
LEFT JOIN [scPessoa].[Email] em ON em.id_email = f.id_email
LEFT JOIN [scPessoa].[Telefone] tl ON tl.id_telefone = f.id_telefone
LEFT JOIN [scPessoa].[Endereco] ed ON ed.id_endereco = f.id_endereco
LEFT JOIN [scFuncionario].[Funcao_Funcionario] fc ON fc.id_funcao = f.id_funcao
LEFT JOIN [scFuncionario].[Conta_Funcionario] cn ON cn.id_conta = f.id_conta
ORDER BY f.id_funcionario DESC
)
GO


CREATE VIEW [scHospede].[view_Hospede]
AS(
SELECT TOP 1
	CONCAT(h.nome, ' ', h.sobrenome) nome,
	DATEDIFF(YEAR, h.dt_nascimento, GETDATE()) idade,
	h.cpf cpf,
	h.rg rg,
	CASE
		WHEN (LOWER(h.sexo) = 'm') THEN 'masculino'
		WHEN (LOWER(h.sexo) = 'f') THEN 'feminino'
		ELSE 'não informado'
	END sexo,
	em.email email,
	CONCAT('(', tl.codigo_area, ') ', tl.telefone) telefone,
	CONCAT(ed.cidade, ', ', ed.bairro) endereco,
	th.descricao categoria,
	CASE
		WHEN (h.hospede_retido) = 1 THEN 'Hóspede Retido'
		ELSE NULL
	END situacao,
	h.observacao obs
FROM [scHospede].[Hospede] h
LEFT JOIN [scPessoa].[Email] em ON em.id_email = h.id_email
LEFT JOIN [scPessoa].[Telefone] tl ON tl.id_telefone = h.id_telefone
LEFT JOIN [scPessoa].[Endereco] ed ON ed.id_endereco = h.id_endereco
INNER JOIN [scHospede].[Hospede_Classe] hc ON hc.id_hospede = h.id_hospede
LEFT JOIN [scHospede].[Tipo_Hospede] th ON th.id_tp_hospede = hc.id_tp_hospede
LEFT JOIN [scReserva].[Reserva] rv ON rv.hospede_principal = h.id_hospede
ORDER BY h.id_hospede DESC
)
GO

